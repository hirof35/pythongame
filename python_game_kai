import sys
import pygame
import random as ran
from pygame.locals import QUIT, Rect, KEYDOWN, K_SPACE, K_r, K_RETURN

# 画面サイズ
WIDTH, HEIGHT = 600, 600

# Pygameの初期化
pygame.init()
SURFACE = pygame.display.set_mode((WIDTH, HEIGHT))
FPSCLOCK = pygame.time.Clock()
FONT = pygame.font.Font(None, 48)  # HPやメッセージ用フォント

# サウンドのロード
pygame.mixer.init()
BGM_CHANNEL = pygame.mixer.Channel(0)
SE_CHANNEL = pygame.mixer.Channel(1)

bgm_title = pygame.mixer.Sound("maou_bgm_8bit01.ogg")
bgm_game = pygame.mixer.Sound("maou_bgm_8bit27.ogg")
bgm_gameover = pygame.mixer.Sound("maou_bgm_8bit20.mp3")
bgm_clear = pygame.mixer.Sound("maou_bgm_8bit29.ogg")
attack_sound = pygame.mixer.Sound("maou_se_sound15.ogg")
damage_sound = pygame.mixer.Sound("maou_se_sound16.ogg")

# 武器の画像のロード
weapon_image = pygame.image.load("sword.png")
weapon_image = pygame.transform.scale(weapon_image, (30, 30))

def play_bgm(sound):
    """BGMを再生（重複防止）"""
    if not BGM_CHANNEL.get_busy():
        BGM_CHANNEL.play(sound, loops=-1)

def stop_bgm():
    """BGMを停止"""
    BGM_CHANNEL.stop()

def play_se(sound):
    """効果音を再生"""
    SE_CHANNEL.play(sound)

def TitleScreen():
    """タイトル画面"""
    play_bgm(bgm_title)
    while True:
        SURFACE.fill((0, 0, 0))
        text = FONT.render("Press ENTER to Start", True, (255, 255, 255))
        SURFACE.blit(text, (WIDTH // 4, HEIGHT // 2))
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN and event.key == K_RETURN:
                stop_bgm()
                return

def GameOverScreen():
    """ゲームオーバー画面"""
    play_bgm(bgm_gameover)
    while True:
        SURFACE.fill((0, 0, 0))
        text = FONT.render("Game Over - Press R to Retry", True, (255, 0, 0))
        SURFACE.blit(text, (WIDTH // 6, HEIGHT // 2))
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN and event.key == K_r:
                stop_bgm()
                return

def ClearScreen():
    """ゲームクリア画面"""
    play_bgm(bgm_clear)
    while True:
        SURFACE.fill((0, 0, 0))
        text = FONT.render("You Win! Press R to Retry", True, (0, 255, 0))
        SURFACE.blit(text, (WIDTH // 6, HEIGHT // 2))
        pygame.display.update()
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN and event.key == K_r:
                stop_bgm()
                return

def Main():
    """メインゲーム処理"""
    play_bgm(bgm_game)
    player_pos_x, player_pos_y = WIDTH // 2, HEIGHT // 2
    player_hp = 10
    player_size = 20
    enemies = [{"x": ran.randint(0, WIDTH-20), "y": ran.randint(0, HEIGHT-20), "hp": 3} for _ in range(4)]
    enemy_size = 15
    weapon_active = False
    weapon_timer = 0
    weapon_rects = []
    while True:
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
            if event.type == KEYDOWN and event.key == K_SPACE:
                weapon_active = True
                weapon_timer = 10
                weapon_rects = [
                    Rect(player_pos_x + 20, player_pos_y, 30, 30),
                    Rect(player_pos_x - 20, player_pos_y, 30, 30),
                    Rect(player_pos_x, player_pos_y + 20, 30, 30),
                    Rect(player_pos_x, player_pos_y - 20, 30, 30),
                ]
                play_se(attack_sound)
        keys = pygame.key.get_pressed()
        if keys[pygame.K_UP]: player_pos_y = max(player_pos_y - 5, 0)
        if keys[pygame.K_DOWN]: player_pos_y = min(player_pos_y + 5, HEIGHT - player_size)
        if keys[pygame.K_LEFT]: player_pos_x = max(player_pos_x - 5, 0)
        if keys[pygame.K_RIGHT]: player_pos_x = min(player_pos_x + 5, WIDTH - player_size)
        SURFACE.fill((0, 0, 0))
        player_rect = Rect(player_pos_x, player_pos_y, player_size, player_size)
        new_enemies = []
        for enemy in enemies:
            if enemy["hp"] > 0:
                enemy["x"] = max(0, min(enemy["x"] + ran.randint(-3, 3), WIDTH - enemy_size))
                enemy["y"] = max(0, min(enemy["y"] + ran.randint(-3, 3), HEIGHT - enemy_size))
                enemy_rect = Rect(enemy["x"], enemy["y"], enemy_size, enemy_size)
                if player_rect.colliderect(enemy_rect):
                    player_hp -= 1
                    play_se(damage_sound)
                for weapon_rect in weapon_rects:
                    if weapon_active and weapon_rect.colliderect(enemy_rect):
                        enemy["hp"] -= 1
                new_enemies.append(enemy)
        enemies = new_enemies
        if weapon_active:
            for weapon_rect in weapon_rects:
                SURFACE.blit(weapon_image, (weapon_rect.x, weapon_rect.y))
            weapon_timer -= 1
            if weapon_timer <= 0:
                weapon_active = False
                weapon_rects = []
        if player_hp <= 0:
            stop_bgm()
            return "gameover"
        if not enemies:
            stop_bgm()
            return "clear"
        pygame.draw.rect(SURFACE, (255, 255, 255), player_rect)
        for enemy in enemies:
            pygame.draw.circle(SURFACE, (210, 0, 0), (enemy["x"], enemy["y"]), enemy_size)
        hp_text = FONT.render(f"HP: {player_hp}", True, (255, 255, 255))
        SURFACE.blit(hp_text, (10, 10))
        pygame.display.update()
        FPSCLOCK.tick(10)

if __name__ == "__main__":
    while True:
        TitleScreen()
        result = Main()
        if result == "gameover":
            GameOverScreen()
        elif result == "clear":
            ClearScreen()
